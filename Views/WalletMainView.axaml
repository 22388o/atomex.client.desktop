<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Atomex.Client.Desktop.Views.WalletMainView"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels"
             xmlns:controls="clr-namespace:Atomex.Client.Desktop.Controls"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             xmlns:ia="using:Avalonia.Xaml.Interactions.Core">

    <Design.DataContext>
        <vm:WalletMainViewModel />
    </Design.DataContext>

    <!-- <UserControl.Resources> -->
    <!--     <local:MyConverter x:Key="myConverter"/> -->
    <!-- </UserControl.Resources> -->

    <!-- <DockPanel Background="White"> -->
    <!--         <Button DockPanel.Dock="Bottom"  -->
    <!--                 ZIndex="1" -->
    <!--                 Height="60" -->
    <!--                 Width="150" -->
    <!--                 Background="Red" -->
    <!--                 Margin="0 -60 0 0">Settings</Button> -->
    <!-- -->
    <!--         <TabControl -->
    <!--             Items="{Binding Tabs}" -->
    <!--             TabStripPlacement="Left"> -->
    <!--             <TabControl.ItemTemplate> -->
    <!--                 <DataTemplate> -->
    <!--                     <StackPanel -->
    <!--                         Orientation="Horizontal" -->
    <!--                         Width="150" -->
    <!--                         Height="60"> -->
    <!--                         <Image Source="avares://Atomex.Client.Desktop/Resources/Images/bitcoin_90x90.png" -->
    <!--                                VerticalAlignment="Center" -->
    <!--                                Margin="10 0 0 0" -->
    <!--                                Width="30" /> -->
    <!--                         <TextBlock -->
    <!--                             Margin="5 0 0 0" -->
    <!--                             VerticalAlignment="Center" -->
    <!--                             Text="{Binding Header}" /> -->
    <!--                     </StackPanel> -->
    <!-- -->
    <!--                 </DataTemplate> -->
    <!--             </TabControl.ItemTemplate> -->
    <!--             <TabControl.ContentTemplate> -->
    <!--                 <DataTemplate> -->
    <!--                     <StackPanel Orientation="Vertical" Spacing="8"> -->
    <!--                         <TextBlock Text="{Binding Text}" /> -->
    <!--                         <Image Source="{Binding Image}" Width="300" /> -->
    <!--                     </StackPanel> -->
    <!--                 </DataTemplate> -->
    <!--             </TabControl.ContentTemplate> -->
    <!--             <TabControl.Styles> -->
    <!--                 <Style Selector="TabItem"> -->
    <!--                     <Setter Property="IsEnabled" Value="{Binding IsEnabled}" /> -->
    <!--                 </Style> -->
    <!--             </TabControl.Styles> -->
    <!--         </TabControl> -->
    <!--     </DockPanel> -->


    <DockPanel x:Name="MainDockerPanel"
               Width="{Binding $parent[Window].Bounds.Width}"
               Height="{Binding $parent[Window].Bounds.Height}">
        <DockPanel DockPanel.Dock="Bottom"
                   Background="{DynamicResource MainWindowTitleBrush}">

            <StackPanel Orientation="Horizontal"
                        DockPanel.Dock="Right"
                        VerticalAlignment="Center"
                        Height="20">
                
                <Border ToolTip.Placement="AnchorAndGravity"
                        ToolTip.VerticalOffset="-32"
                        VerticalAlignment="Center"
                        Cursor="Help"
                        Margin="8 0">
                    <TextBlock Text="Exchange"
                               x:Name="ExchangeTextBox"
                               FontSize="11"
                               Foreground="{DynamicResource StatusBarDisconnectedForeground}"/>
                    <ToolTip.Tip>
                        <TextBlock x:Name="ToolTipTextBoxExchange"
                                   Text="Disconnected" />
                    </ToolTip.Tip>
                    <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding IsExchangeConnected}"
                                                ComparisonCondition="Equal"
                                                Value="False">
                            <ia:ChangePropertyAction TargetObject="{Binding #ToolTipTextBoxExchange}"
                                                     PropertyName="Text"
                                                     Value="Disconnected" />
                            <ia:ChangePropertyAction TargetObject="{Binding #ExchangeTextBox}"
                                                     PropertyName="Foreground"
                                                     Value="{DynamicResource StatusBarDisconnectedForeground}" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding IsExchangeConnected}"
                                                ComparisonCondition="Equal"
                                                Value="True">
                            <ia:ChangePropertyAction TargetObject="{Binding #ToolTipTextBoxExchange}"
                                                     PropertyName="Text"
                                                     Value="Connected" />
                            <ia:ChangePropertyAction TargetObject="{Binding #ExchangeTextBox}"
                                                     PropertyName="Foreground"
                                                     Value="{DynamicResource StatusBarConnectedForeground}" />
                        </ia:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Border>
                
                <Rectangle Margin="0 4"
                           VerticalAlignment="Stretch"
                           Fill="{DynamicResource StatusBarVersionForeground}"
                           Width="1"/>
                
                <Border ToolTip.Placement="AnchorAndGravity"
                        ToolTip.VerticalOffset="-32"
                        VerticalAlignment="Center"
                        Cursor="Help"
                        Margin="8 0">
                    <TextBlock Text="Market Data"
                               x:Name="MarketTextBox"
                               FontSize="11"
                               Foreground="{DynamicResource StatusBarDisconnectedForeground}"/>
                    <ToolTip.Tip>
                        <TextBlock x:Name="ToolTipTextBoxMarket"
                                   Text="Disconnected" />
                    </ToolTip.Tip>
                    <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding IsMarketDataConnected}"
                                                ComparisonCondition="Equal"
                                                Value="False">
                            <ia:ChangePropertyAction TargetObject="{Binding #ToolTipTextBoxMarket}"
                                                     PropertyName="Text"
                                                     Value="Disconnected" />
                            <ia:ChangePropertyAction TargetObject="{Binding #MarketTextBox}"
                                                     PropertyName="Foreground"
                                                     Value="{DynamicResource StatusBarDisconnectedForeground}" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding IsMarketDataConnected}"
                                                ComparisonCondition="Equal"
                                                Value="True">
                            <ia:ChangePropertyAction TargetObject="{Binding #ToolTipTextBoxMarket}"
                                                     PropertyName="Text"
                                                     Value="Connected" />
                            <ia:ChangePropertyAction TargetObject="{Binding #MarketTextBox}"
                                                     PropertyName="Foreground"
                                                     Value="{DynamicResource StatusBarConnectedForeground}" />
                        </ia:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Border>
                
                <Rectangle Margin="0 4"
                           VerticalAlignment="Stretch"
                           Fill="{DynamicResource StatusBarVersionForeground}" 
                           Width="1"/>
                
                <Border ToolTip.Placement="AnchorAndGravity"
                        ToolTip.VerticalOffset="-32"
                        VerticalAlignment="Center"
                        Cursor="Help"
                        Margin="8 0">
                    <TextBlock Text="Rates Provider"
                               x:Name="RatesTextBox"
                               FontSize="11"
                               Foreground="{DynamicResource StatusBarConnectedForeground}"/>
                    <ToolTip.Tip>
                        <TextBlock x:Name="ToolTipTextBoxRates"
                                   Text="Connected" />
                    </ToolTip.Tip>
                    <i:Interaction.Behaviors>
                        <ia:DataTriggerBehavior Binding="{Binding IsQuotesProviderAvailable}"
                                                ComparisonCondition="Equal"
                                                Value="False">
                            <ia:ChangePropertyAction TargetObject="{Binding #ToolTipTextBoxRates}"
                                                     PropertyName="Text"
                                                     Value="Disconnected" />
                            <ia:ChangePropertyAction TargetObject="{Binding #RatesTextBox}"
                                                     PropertyName="Foreground"
                                                     Value="{DynamicResource StatusBarDisconnectedForeground}" />
                        </ia:DataTriggerBehavior>
                        <ia:DataTriggerBehavior Binding="{Binding IsQuotesProviderAvailable}"
                                                ComparisonCondition="Equal"
                                                Value="True">
                            <ia:ChangePropertyAction TargetObject="{Binding #ToolTipTextBoxRates}"
                                                     PropertyName="Text"
                                                     Value="Connected" />
                            <ia:ChangePropertyAction TargetObject="{Binding #RatesTextBox}"
                                                     PropertyName="Foreground"
                                                     Value="{DynamicResource StatusBarConnectedForeground}" />
                        </ia:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Border>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center">
                <TextBlock Text="Version:"
                           Margin="8 0 4 0"
                           FontSize="11"
                           Foreground="{DynamicResource StatusBarVersionForeground}" />
                <TextBlock Text="{Binding InstalledVersion}"
                           FontSize="11"
                           Foreground="{DynamicResource StatusBarVersionForeground}" />
            </StackPanel>
        </DockPanel>

        <DockPanel DockPanel.Dock="Left"
                   Background="{DynamicResource HamburgerMenuBackgroundBrush}">
            
            <StackPanel DockPanel.Dock="Bottom">
                <controls:MenuButton
                    Background="Transparent"
                    Foreground="White"
                    IsSelected="{Binding IsSettingsSectionActive}"
                    Width="{DynamicResource WalletMenuItemWidth}"
                    Command="{Binding SelectSettings}">
                    <StackPanel Orientation="Horizontal">
                        <Path Stretch="Uniform"
                              VerticalAlignment="Center"
                              UseLayoutRounding="False"
                              Width="30"
                              Height="30"
                              Fill="{DynamicResource DefaultForegroundBrush}"
                              Data="{DynamicResource Material.Settings}"/>
                        <TextBlock VerticalAlignment="Center"
                                   Margin="8 0 0 0">
                            Settings
                        </TextBlock>
                    </StackPanel>
                </controls:MenuButton>
            </StackPanel>
            
            <StackPanel>
                <controls:MenuButton
                    Background="Transparent"
                    Foreground="White"
                    IsSelected="{Binding IsPortfolioSectionActive}"
                    Width="{DynamicResource WalletMenuItemWidth}"
                    Command="{Binding SelectPortfolio}">
                    <StackPanel Orientation="Horizontal">
                        <Path Stretch="Uniform"
                              VerticalAlignment="Center"
                              UseLayoutRounding="False"
                              Width="30"
                              Height="30"
                              Fill="{DynamicResource DefaultForegroundBrush}"
                              Data="{DynamicResource FontAwesome.ChartPieSolid}"/>
                        <Panel Height="30">
                            <TextBlock VerticalAlignment="Center"
                                       Margin="8 0 0 0">
                                Portfolio
                            </TextBlock>
                        </Panel>
                    </StackPanel>
                </controls:MenuButton>

                <controls:MenuButton
                    Background="Transparent"
                    Foreground="White"
                    IsSelected="{Binding IsWalletsSectionActive}"
                    Width="{DynamicResource WalletMenuItemWidth}"
                    Command="{Binding SelectWallets}">
                    <StackPanel Orientation="Horizontal">
                        <Path Stretch="Uniform"
                              VerticalAlignment="Center"
                              UseLayoutRounding="False"
                              Width="30"
                              Height="30"
                              Fill="{DynamicResource DefaultForegroundBrush}"
                              Data="{DynamicResource Entypo.Wallet}"/>
                        <Panel Height="30">
                            <TextBlock VerticalAlignment="Center"
                                       Margin="8 0 0 0">
                                Wallets
                            </TextBlock>
                        </Panel>
                    </StackPanel>
                </controls:MenuButton>
                <controls:MenuButton
                    Background="Transparent"
                    Foreground="White"
                    IsSelected="{Binding IsConversionSectionActive}"
                    Width="{DynamicResource WalletMenuItemWidth}"
                    Command="{Binding SelectConversion}">
                    <StackPanel Orientation="Horizontal">
                        <Path Stretch="Uniform"
                              UseLayoutRounding="False"
                              VerticalAlignment="Center"
                              Width="30"
                              Height="20"
                              Fill="{DynamicResource DefaultForegroundBrush}"
                              Data="{DynamicResource Unicons.ExchangeAlt}"/>
                        <Panel Height="30">
                            <TextBlock VerticalAlignment="Center"
                                       Margin="8 0 0 0">
                                Conversion
                            </TextBlock>
                        </Panel>
                    </StackPanel>
                </controls:MenuButton>
            </StackPanel>
        </DockPanel>
        

        <ContentControl Content="{Binding Content}" />
    </DockPanel>
</UserControl>