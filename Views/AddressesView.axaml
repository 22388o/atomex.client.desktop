<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="450"
             x:Class="Atomex.Client.Desktop.Views.AddressesView"
             xmlns:vm="clr-namespace:Atomex.Client.Desktop.ViewModels"
             xmlns:views="clr-namespace:Atomex.Client.Desktop.Views"
             xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia">

    <Design.DataContext>
        <vm:AddressesViewModel />
    </Design.DataContext>
    
    <UserControl.Styles>
        <Style Selector="Viewbox.Refresh[IsEnabled=True]">
            <Style.Animations>
                <Animation Duration="0:0:2.5"
                           IterationCount="INFINITE"
                           FillMode="Forward"
                           PlaybackDirection="Normal">
                    <KeyFrame Cue="0%">
                        <Setter Property="RotateTransform.Angle" Value="0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="RotateTransform.Angle" Value="360" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <Style Selector="Button.Refresh">
            <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
        </Style>

        <Style Selector="Button.Refresh:pointerover /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
        </Style>
        <Style Selector="Button.Refresh:pressed  /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
        </Style>
        <Style Selector="Button.Refresh:pressed:pointerover">
            <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
        </Style>
    </UserControl.Styles>

    <Grid RowDefinitions="Auto,*"
          Name="DesignGrid">
        <Border Grid.Row="0"
                Background="{DynamicResource LightDefaultOpacity6}"
                CornerRadius="{DynamicResource AtomexCornerRadius}"
                VerticalAlignment="Top"
                Height="34"
                Margin="0 16 0 0"
                Padding="12 0">
            
            <Grid Name="HeaderGrid"
                  VerticalAlignment="Stretch">

                <Button Grid.Column="0"
                        Padding="0"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        IsEnabled="False"
                        Classes="EmptyBtnWithContent">
                    <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="13"
                               Text="Address" />
                </Button>
                <Button Grid.Column="1"
                        Padding="0"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Command="{Binding SetSortTypeCommand}"
                        CommandParameter="{x:Static vm:AddressesSortField.ByPath}"
                        Classes="EmptyBtnWithContent">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   FontSize="13"
                                   VerticalAlignment="Center"
                                   Text="Path" />
                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center"
                                    Margin="5 0 0 0">
                            <svg:Svg Width="14"
                                     Height="14"
                                     IsVisible="{Binding !SortByPath}"
                                     Path="/Resources/Icons/arrow-double.svg" />
                            <svg:Svg Width="14"
                                     Height="14"
                                     IsVisible="{Binding SortByPathAndAsc}"
                                     Path="/Resources/Icons/arrow-double-asc.svg" />
                            <svg:Svg Width="14"
                                     Height="14"
                                     IsVisible="{Binding SortByPathAndDesc}"
                                     Path="/Resources/Icons/arrow-double-desc.svg" />
                        </StackPanel>
                    </StackPanel>
                </Button>
                <Button Grid.Column="2"
                        Padding="0"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        IsEnabled="False"
                        Classes="EmptyBtnWithContent">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   FontSize="13"
                                   Text="Type" />
                    </StackPanel>
                </Button>
                <Button Grid.Column="3"
                        Padding="0"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Command="{Binding SetSortTypeCommand}"
                        CommandParameter="{x:Static vm:AddressesSortField.ByBalance}"
                        Classes="EmptyBtnWithContent">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   FontSize="13"
                                   VerticalAlignment="Center"
                                   Text="Balance" />
                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center"
                                    Margin="5 0 0 0">
                            <svg:Svg Width="14"
                                     Height="14"
                                     IsVisible="{Binding !SortByBalance}"
                                     Path="/Resources/Icons/arrow-double.svg" />
                            <svg:Svg Width="14"
                                     Height="14"
                                     IsVisible="{Binding SortByBalanceAndAsc}"
                                     Path="/Resources/Icons/arrow-double-asc.svg" />
                            <svg:Svg Width="14"
                                     Height="14"
                                     IsVisible="{Binding SortByBalanceAndDesc}"
                                     Path="/Resources/Icons/arrow-double-desc.svg" />
                        </StackPanel>
                    </StackPanel>
                </Button>
                <Button Grid.Column="4"
                        Padding="0"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        IsEnabled="False"
                        Classes="EmptyBtnWithContent">
                    <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="13"
                               Text="Token balance" />
                </Button>
                <Button Grid.Column="5"
                        Padding="0"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        IsEnabled="False"
                        Classes="EmptyBtnWithContent">
                    <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="13"
                               Text="Key" />
                </Button>

                <Button Grid.Column="6"
                        Padding="0"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        IsEnabled="False"
                        Classes="EmptyBtnWithContent">
                    <TextBlock Foreground="{DynamicResource SecondaryForegroundBrush}"
                               FontSize="13"
                               Text="Update" />
                </Button>
            </Grid>
        </Border>

        <ListBox Grid.Row="1"
                 Name="AddressesListBox"
                 Background="{DynamicResource AlmostTransparentBrush}"
                 Items="{Binding Addresses}"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch">
            <ListBox.Styles>
                <Style Selector="ListBoxItem">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Height" Value="48" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="BorderThickness" Value="0 0 0 1" />
                    <Setter Property="BorderBrush" Value="{DynamicResource LightDefaultOpacity10}" />
                </Style>
                <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
                    <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
                </Style>
                <Style Selector="ListBoxItem:not(:selected) /template/ ContentPresenter">
                    <Setter Property="Background" Value="{DynamicResource AlmostTransparentBrush}" />
                </Style>

                <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                    <Setter Property="Background" Value="{DynamicResource ListBoxItemPointeroverBrush}" />
                    <Setter Property="CornerRadius" Value="8" />
                </Style>
            </ListBox.Styles>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <views:AddressView DataContext="{Binding}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</UserControl>